#include "KeyboardKeyHelper.h"
#include <dinput.h>

namespace direct
{

uint64_t ToDirectKeyboardKey(const core::KeyboardKey i_keyboardKey)
{
	switch (i_keyboardKey)
	{
	case core::KeyboardKey::Escape:
		return DIK_ESCAPE;
	case core::KeyboardKey::N1:
		return DIK_1;
	case core::KeyboardKey::N2:
		return DIK_2;
	case core::KeyboardKey::N3:
		return DIK_3;
	case core::KeyboardKey::N4:
		return DIK_4;
	case core::KeyboardKey::N5:
		return DIK_5;
	case core::KeyboardKey::N6:
		return DIK_6;
	case core::KeyboardKey::N7:
		return DIK_7;
	case core::KeyboardKey::N8:
		return DIK_8;
	case core::KeyboardKey::N9:
		return DIK_9;
	case core::KeyboardKey::N0:
		return DIK_0;
	case core::KeyboardKey::Minus:
		return DIK_MINUS;
	case core::KeyboardKey::Equals:
		return DIK_EQUALS;
	case core::KeyboardKey::Back:
		return DIK_BACK;
	case core::KeyboardKey::Tab:
		return DIK_TAB;
	case core::KeyboardKey::Q:
		return DIK_Q;
	case core::KeyboardKey::W:
		return DIK_W;
	case core::KeyboardKey::E:
		return DIK_E;
	case core::KeyboardKey::R:
		return DIK_R;
	case core::KeyboardKey::T:
		return DIK_T;
	case core::KeyboardKey::Y:
		return DIK_Y;
	case core::KeyboardKey::U:
		return DIK_U;
	case core::KeyboardKey::I:
		return DIK_I;
	case core::KeyboardKey::O:
		return DIK_O;
	case core::KeyboardKey::P:
		return DIK_P;
	case core::KeyboardKey::LeftBracket:
		return DIK_LBRACKET;
	case core::KeyboardKey::RightBracket:
		return DIK_RBRACKET;
	case core::KeyboardKey::Return:
		return DIK_RETURN;
	case core::KeyboardKey::LeftControl:
		return DIK_LCONTROL;
	case core::KeyboardKey::A:
		return DIK_A;
	case core::KeyboardKey::S:
		return DIK_S;
	case core::KeyboardKey::D:
		return DIK_D;
	case core::KeyboardKey::F:
		return DIK_F;
	case core::KeyboardKey::G:
		return DIK_G;
	case core::KeyboardKey::H:
		return DIK_H;
	case core::KeyboardKey::J:
		return DIK_J;
	case core::KeyboardKey::K:
		return DIK_K;
	case core::KeyboardKey::L:
		return DIK_L;
	case core::KeyboardKey::Semicolon:
		return DIK_SEMICOLON;
	case core::KeyboardKey::Apostrophe:
		return DIK_APOSTROPHE;
	case core::KeyboardKey::Grave:
		return DIK_GRAVE;
	case core::KeyboardKey::LeftShift:
		return DIK_LSHIFT;
	case core::KeyboardKey::Backlash:
		return DIK_BACKSLASH;
	case core::KeyboardKey::Z:
		return DIK_Z;
	case core::KeyboardKey::X:
		return DIK_X;
	case core::KeyboardKey::C:
		return DIK_C;
	case core::KeyboardKey::V:
		return DIK_V;
	case core::KeyboardKey::B:
		return DIK_B;
	case core::KeyboardKey::N:
		return DIK_N;
	case core::KeyboardKey::M:
		return DIK_M;
	case core::KeyboardKey::Coma:
		return DIK_COMMA;
	case core::KeyboardKey::Period:
		return DIK_PERIOD;
	case core::KeyboardKey::Slash:
		return DIK_SLASH;
	case core::KeyboardKey::RightShift:
		return DIK_RSHIFT;
	case core::KeyboardKey::Multiply:
		return DIK_MULTIPLY;
	case core::KeyboardKey::LeftAlt:
		return DIK_LALT;
	case core::KeyboardKey::Space:
		return DIK_SPACE;
	case core::KeyboardKey::Capital:
		return DIK_CAPITAL;
	case core::KeyboardKey::F1:
		return DIK_F1;
	case core::KeyboardKey::F2:
		return DIK_F2;
	case core::KeyboardKey::F3:
		return DIK_F3;
	case core::KeyboardKey::F4:
		return DIK_F4;
	case core::KeyboardKey::F5:
		return DIK_F5;
	case core::KeyboardKey::F6:
		return DIK_F6;
	case core::KeyboardKey::F7:
		return DIK_F7;
	case core::KeyboardKey::F8:
		return DIK_F8;
	case core::KeyboardKey::F9:
		return DIK_F9;
	case core::KeyboardKey::F10:
		return DIK_F10;
	case core::KeyboardKey::Numlock:
		return DIK_NUMLOCK;
	case core::KeyboardKey::Scroll:
		return DIK_SCROLL;
	case core::KeyboardKey::Numpad7:
		return DIK_NUMPAD7;
	case core::KeyboardKey::Numpad8:
		return DIK_NUMPAD8;
	case core::KeyboardKey::Numpad9:
		return DIK_NUMPAD9;
	case core::KeyboardKey::Subtract:
		return DIK_SUBTRACT;
	case core::KeyboardKey::Numpad4:
		return DIK_NUMPAD4;
	case core::KeyboardKey::Numpad5:
		return DIK_NUMPAD5;
	case core::KeyboardKey::Numpad6:
		return DIK_NUMPAD6;
	case core::KeyboardKey::Add:
		return DIK_ADD;
	case core::KeyboardKey::Numpad1:
		return DIK_NUMPAD1;
	case core::KeyboardKey::Numpad2:
		return DIK_NUMPAD2;
	case core::KeyboardKey::Numpad3:
		return DIK_NUMPAD3;
	case core::KeyboardKey::Numpad0:
		return DIK_NUMPAD0;
	case core::KeyboardKey::Decimal:
		return DIK_DECIMAL;
	case core::KeyboardKey::Oem102:
		return DIK_OEM_102;
	case core::KeyboardKey::F11:
		return DIK_F11;
	case core::KeyboardKey::F12:
		return DIK_F12;
	case core::KeyboardKey::F13:
		return DIK_F13;
	case core::KeyboardKey::F14:
		return DIK_F14;
	case core::KeyboardKey::F15:
		return DIK_F15;
	case core::KeyboardKey::Kana:
		return DIK_KANA;
	case core::KeyboardKey::AbntC1:
		return DIK_ABNT_C1;
	case core::KeyboardKey::Convert:
		return DIK_CONVERT;
	case core::KeyboardKey::NoConvert:
		return DIK_NOCONVERT;
	case core::KeyboardKey::Yen:
		return DIK_YEN;
	case core::KeyboardKey::AbntC2:
		return DIK_ABNT_C2;
	case core::KeyboardKey::NumpadEquals:
		return DIK_NUMPADEQUALS;
	case core::KeyboardKey::PrevTrack:
		return DIK_PREVTRACK;
	case core::KeyboardKey::At:
		return DIK_AT;
	case core::KeyboardKey::Colon:
		return DIK_COLON;
	case core::KeyboardKey::Underline:
		return DIK_UNDERLINE;
	case core::KeyboardKey::Kanji:
		return DIK_KANJI;
	case core::KeyboardKey::Stop:
		return DIK_STOP;
	case core::KeyboardKey::Ax:
		return DIK_AX;
	case core::KeyboardKey::Unlabeled:
		return DIK_UNLABELED;
	case core::KeyboardKey::NextTrack:
		return DIK_NEXTTRACK;
	case core::KeyboardKey::NumpadEnter:
		return DIK_NUMPADENTER;
	case core::KeyboardKey::RightControl:
		return DIK_RCONTROL;
	case core::KeyboardKey::Mute:
		return DIK_MUTE;
	case core::KeyboardKey::Calculator:
		return DIK_CALCULATOR;
	case core::KeyboardKey::PlayPause:
		return DIK_PLAYPAUSE;
	case core::KeyboardKey::MediaStop:
		return DIK_MEDIASTOP;
	case core::KeyboardKey::VolumeDown:
		return DIK_VOLUMEDOWN;
	case core::KeyboardKey::VolumeUp:
		return DIK_VOLUMEUP;
	case core::KeyboardKey::WebHome:
		return DIK_WEBHOME;
	case core::KeyboardKey::NumpadComma:
		return DIK_NUMPADCOMMA;
	case core::KeyboardKey::Divide:
		return DIK_DIVIDE;
	case core::KeyboardKey::SysRQ:
		return DIK_SYSRQ;
	case core::KeyboardKey::RightAlt:
		return DIK_RALT;
	case core::KeyboardKey::Pause:
		return DIK_PAUSE;
	case core::KeyboardKey::Home:
		return DIK_HOME;
	case core::KeyboardKey::Up:
		return DIK_UP;
	case core::KeyboardKey::Prior:
		return DIK_PRIOR;
	case core::KeyboardKey::Left:
		return DIK_LEFT;
	case core::KeyboardKey::Right:
		return DIK_RIGHT;
	case core::KeyboardKey::End:
		return DIK_END;
	case core::KeyboardKey::Down:
		return DIK_DOWN;
	case core::KeyboardKey::Next:
		return DIK_NEXT;
	case core::KeyboardKey::Insert:
		return DIK_INSERT;
	case core::KeyboardKey::Delete:
		return DIK_DELETE;
	case core::KeyboardKey::LeftWin:
		return DIK_LWIN;
	case core::KeyboardKey::RightWin:
		return DIK_RWIN;
	case core::KeyboardKey::Apps:
		return DIK_APPS;
	case core::KeyboardKey::Power:
		return DIK_POWER;
	case core::KeyboardKey::Sleep:
		return DIK_SLEEP;
	case core::KeyboardKey::Wake:
		return DIK_WAKE;
	case core::KeyboardKey::WebSearch:
		return DIK_WEBSEARCH;
	case core::KeyboardKey::WebFavorite:
		return DIK_WEBFAVORITES;
	case core::KeyboardKey::WebRefresh:
		return DIK_WEBREFRESH;
	case core::KeyboardKey::WebStop:
		return DIK_WEBSTOP;
	case core::KeyboardKey::WebForward:
		return DIK_WEBFORWARD;
	case core::KeyboardKey::WebBack:
		return DIK_WEBBACK;
	case core::KeyboardKey::MyComputer:
		return DIK_MYCOMPUTER;
	case core::KeyboardKey::Mail:
		return DIK_MAIL;
	case core::KeyboardKey::MediaSelect:
		return DIK_MEDIASELECT;
	}
}

core::KeyboardKey ToKeyboardKey(const uint64_t i_directKey)
{
	switch (i_directKey)
	{
	case DIK_ESCAPE:
		return core::KeyboardKey::Escape;
	case DIK_1:
		return core::KeyboardKey::N1;
	case DIK_2:
		return core::KeyboardKey::N2;
	case DIK_3:
		return core::KeyboardKey::N3;
	case DIK_4:
		return core::KeyboardKey::N4;
	case DIK_5:
		return core::KeyboardKey::N5;
	case DIK_6:
		return core::KeyboardKey::N6;
	case DIK_7:
		return core::KeyboardKey::N7;
	case DIK_8:
		return core::KeyboardKey::N8;
	case DIK_9:
		return core::KeyboardKey::N9;
	case DIK_0:
		return core::KeyboardKey::N0;
	case DIK_MINUS:
		return core::KeyboardKey::Minus;
	case DIK_EQUALS:
		return core::KeyboardKey::Equals;
	case DIK_BACK:
		return core::KeyboardKey::Back;
	case DIK_TAB:
		return core::KeyboardKey::Tab;
	case DIK_Q:
		return core::KeyboardKey::Q;
	case DIK_W:
		return core::KeyboardKey::W;
	case DIK_E:
		return core::KeyboardKey::E;
	case DIK_R:
		return core::KeyboardKey::R;
	case DIK_T:
		return core::KeyboardKey::T;
	case DIK_Y:
		return core::KeyboardKey::Y;
	case DIK_U:
		return core::KeyboardKey::U;
	case DIK_I:
		return core::KeyboardKey::I;
	case DIK_O:
		return core::KeyboardKey::O;
	case DIK_P:
		return core::KeyboardKey::P;
	case DIK_LBRACKET:
		return core::KeyboardKey::LeftBracket;
	case DIK_RBRACKET:
		return core::KeyboardKey::RightBracket;
	case DIK_RETURN:
		return core::KeyboardKey::Return;
	case DIK_LCONTROL:
		return core::KeyboardKey::LeftControl;
	case DIK_A:
		return core::KeyboardKey::A;
	case DIK_S:
		return core::KeyboardKey::S;
	case DIK_D:
		return core::KeyboardKey::D;
	case DIK_F:
		return core::KeyboardKey::F;
	case DIK_G:
		return core::KeyboardKey::G;
	case DIK_H:
		return core::KeyboardKey::H;
	case DIK_J:
		return core::KeyboardKey::J;
	case DIK_K:
		return core::KeyboardKey::K;
	case DIK_L:
		return core::KeyboardKey::L;
	case DIK_SEMICOLON:
		return core::KeyboardKey::Semicolon;
	case DIK_APOSTROPHE:
		return core::KeyboardKey::Apostrophe;
	case DIK_GRAVE:
		return core::KeyboardKey::Grave;
	case DIK_LSHIFT:
		return core::KeyboardKey::LeftShift;
	case DIK_BACKSLASH:
		return core::KeyboardKey::Backlash;
	case DIK_Z:
		return core::KeyboardKey::Z;
	case DIK_X:
		return core::KeyboardKey::X;
	case DIK_C:
		return core::KeyboardKey::C;
	case DIK_V:
		return core::KeyboardKey::V;
	case DIK_B:
		return core::KeyboardKey::B;
	case DIK_N:
		return core::KeyboardKey::N;
	case DIK_M:
		return core::KeyboardKey::M;
	case DIK_COMMA:
		return core::KeyboardKey::Coma;
	case DIK_PERIOD:
		return core::KeyboardKey::Period;
	case DIK_SLASH:
		return core::KeyboardKey::Slash;
	case DIK_RSHIFT:
		return core::KeyboardKey::RightShift;
	case DIK_MULTIPLY:
		return core::KeyboardKey::Multiply;
	case DIK_LALT:
		return core::KeyboardKey::LeftAlt;
	case DIK_SPACE:
		return core::KeyboardKey::Space;
	case DIK_CAPITAL:
		return core::KeyboardKey::Capital;
	case DIK_F1:
		return core::KeyboardKey::F1;
	case DIK_F2:
		return core::KeyboardKey::F2;
	case DIK_F3:
		return core::KeyboardKey::F3;
	case DIK_F4:
		return core::KeyboardKey::F4;
	case DIK_F5:
		return core::KeyboardKey::F5;
	case DIK_F6:
		return core::KeyboardKey::F6;
	case DIK_F7:
		return core::KeyboardKey::F7;
	case DIK_F8:
		return core::KeyboardKey::F8;
	case DIK_F9:
		return core::KeyboardKey::F9;
	case DIK_F10:
		return core::KeyboardKey::F10;
	case DIK_NUMLOCK:
		return core::KeyboardKey::Numlock;
	case DIK_SCROLL:
		return core::KeyboardKey::Scroll;
	case DIK_NUMPAD7:
		return core::KeyboardKey::Numpad7;
	case DIK_NUMPAD8:
		return core::KeyboardKey::Numpad8;
	case DIK_NUMPAD9:
		return core::KeyboardKey::Numpad9;
	case DIK_SUBTRACT:
		return core::KeyboardKey::Subtract;
	case DIK_NUMPAD4:
		return core::KeyboardKey::Numpad4;
	case DIK_NUMPAD5:
		return core::KeyboardKey::Numpad5;
	case DIK_NUMPAD6:
		return core::KeyboardKey::Numpad6;
	case DIK_ADD:
		return core::KeyboardKey::Add;
	case DIK_NUMPAD1:
		return core::KeyboardKey::Numpad1;
	case DIK_NUMPAD2:
		return core::KeyboardKey::Numpad2;
	case DIK_NUMPAD3:
		return core::KeyboardKey::Numpad3;
	case DIK_NUMPAD0:
		return core::KeyboardKey::Numpad0;
	case DIK_DECIMAL:
		return core::KeyboardKey::Decimal;
	case DIK_OEM_102:
		return core::KeyboardKey::Oem102;
	case DIK_F11:
		return core::KeyboardKey::F11;
	case DIK_F12:
		return core::KeyboardKey::F12;
	case DIK_F13:
		return core::KeyboardKey::F13;
	case DIK_F14:
		return core::KeyboardKey::F14;
	case DIK_F15:
		return core::KeyboardKey::F15;
	case DIK_KANA:
		return core::KeyboardKey::Kana;
	case DIK_ABNT_C1:
		return core::KeyboardKey::AbntC1;
	case DIK_CONVERT:
		return core::KeyboardKey::Convert;
	case DIK_NOCONVERT:
		return core::KeyboardKey::NoConvert;
	case DIK_YEN:
		return core::KeyboardKey::Yen;
	case DIK_ABNT_C2:
		return core::KeyboardKey::AbntC2;
	case DIK_NUMPADEQUALS:
		return core::KeyboardKey::NumpadEquals;
	case DIK_PREVTRACK:
		return core::KeyboardKey::PrevTrack;
	case DIK_AT:
		return core::KeyboardKey::At;
	case DIK_COLON:
		return core::KeyboardKey::Colon;
	case DIK_UNDERLINE:
		return core::KeyboardKey::Underline;
	case DIK_KANJI:
		return core::KeyboardKey::Kanji;
	case DIK_STOP:
		return core::KeyboardKey::Stop;
	case DIK_AX:
		return core::KeyboardKey::Ax;
	case DIK_UNLABELED:
		return core::KeyboardKey::Unlabeled;
	case DIK_NEXTTRACK:
		return core::KeyboardKey::NextTrack;
	case DIK_NUMPADENTER:
		return core::KeyboardKey::NumpadEnter;
	case DIK_RCONTROL:
		return core::KeyboardKey::RightControl;
	case DIK_MUTE:
		return core::KeyboardKey::Mute;
	case DIK_CALCULATOR:
		return core::KeyboardKey::Calculator;
	case DIK_PLAYPAUSE:
		return core::KeyboardKey::PlayPause;
	case DIK_MEDIASTOP:
		return core::KeyboardKey::MediaStop;
	case DIK_VOLUMEDOWN:
		return core::KeyboardKey::VolumeDown;
	case DIK_VOLUMEUP:
		return core::KeyboardKey::VolumeUp;
	case DIK_WEBHOME:
		return core::KeyboardKey::WebHome;
	case DIK_NUMPADCOMMA:
		return core::KeyboardKey::NumpadComma;
	case DIK_DIVIDE:
		return core::KeyboardKey::Divide;
	case DIK_SYSRQ:
		return core::KeyboardKey::SysRQ;
	case DIK_RALT:
		return core::KeyboardKey::RightAlt;
	case DIK_PAUSE:
		return core::KeyboardKey::Pause;
	case DIK_HOME:
		return core::KeyboardKey::Home;
	case DIK_UP:
		return core::KeyboardKey::Up;
	case DIK_PRIOR:
		return core::KeyboardKey::Prior;
	case DIK_LEFT:
		return core::KeyboardKey::Left;
	case DIK_RIGHT:
		return core::KeyboardKey::Right;
	case DIK_END:
		return core::KeyboardKey::End;
	case DIK_DOWN:
		return core::KeyboardKey::Down;
	case DIK_NEXT:
		return core::KeyboardKey::Next;
	case DIK_INSERT:
		return core::KeyboardKey::Insert;
	case DIK_DELETE:
		return core::KeyboardKey::Delete;
	case DIK_LWIN:
		return core::KeyboardKey::LeftWin;
	case DIK_RWIN:
		return core::KeyboardKey::RightWin;
	case DIK_APPS:
		return core::KeyboardKey::Apps;
	case DIK_POWER:
		return core::KeyboardKey::Power;
	case DIK_SLEEP:
		return core::KeyboardKey::Sleep;
	case DIK_WAKE:
		return core::KeyboardKey::Wake;
	case DIK_WEBSEARCH:
		return core::KeyboardKey::WebSearch;
	case DIK_WEBFAVORITES:
		return core::KeyboardKey::WebFavorite;
	case DIK_WEBREFRESH:
		return core::KeyboardKey::WebRefresh;
	case DIK_WEBSTOP:
		return core::KeyboardKey::WebStop;
	case DIK_WEBFORWARD:
		return core::KeyboardKey::WebForward;
	case DIK_WEBBACK:
		return core::KeyboardKey::WebBack;
	case DIK_MYCOMPUTER:
		return core::KeyboardKey::MyComputer;
	case DIK_MAIL:
		return core::KeyboardKey::Mail;
	case DIK_MEDIASELECT:
		return core::KeyboardKey::MediaSelect;
	}
}

} // namespace direct
